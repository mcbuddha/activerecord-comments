#!/usr/bin/env ruby
require 'yaml'
require 'optparse'

require 'activerecord_comments'

require 'pry'

$: << File.expand_path('../lib', __FILE__)

DBCONF = YAML::load(IO.read(File.expand_path('../../config/database.yml', __FILE__)))
ENV['DB'] ||= 'postgres'

ActiveRecord::Base.establish_connection(DBCONF[ENV['DB']])

TYPES = %w(table column)
ACTIONS = %w(set retrieve remove)

options = {}
OptionParser.new do |opts|
  opts.on('--table TABLE', 'Select table') { |table| options[:table] = table }
  opts.on('--column COLUMN', 'Select column') { |column| options[:column] = column }
  opts.on('--action ACTION', ACTIONS, 'Select action to perform', ACTIONS.to_s) { |action| options[:action] = action }
  opts.on('--comment COMMENT', 'Comment to save') { |comment| options[:comment] = comment }
end.parse!

abort 'You must specify a table' unless options[:table]
abort 'You must specify an action' unless options[:action]
abort 'You must specify a comment' if options[:action] == 'set' && options[:comment].nil?

command = "#{options[:action]}_#{options[:column] ? 'column':'table'}_comment"
args = [options[:table].to_sym]
args << options[:column].to_sym if options[:column]
args << options[:comment] if options[:comment]
result = ActiveRecord::Base.connection.send command, *args
pp result if options[:action] == 'retrieve'
